{"ast":null,"code":"var _jsxFileName = \"/Users/chi/Projects/Web/albums-2.0/src/components/Albums/Album.js\";\nimport React from \"react\";\nimport DateMonth from \"../DateMonth\";\nimport AlbumsButton from '../glamorous/AlbumsButton';\nimport glamorous from \"glamorous\";\nimport { observer } from \"mobx-react\";\nimport { imgUrl } from '../../config';\nconst AlbumItem = glamorous.div({\n  width: 225,\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  margin: '30px 20px 30px 0'\n});\nconst AlbumCover = glamorous.div({});\nconst AlbumCoverImg = glamorous.img({\n  width: 220,\n  height: 220,\n  border: '#e1e7f2 1px solid',\n  borderRadius: 10\n});\nconst AlbumInfo = glamorous.div({\n  marginTop: 10,\n  fontSize: 14\n});\nconst AlbumArtist = glamorous.div({\n  color: '#333333',\n  fontWeight: 'bold'\n});\nconst AlbumTitle = glamorous.div({\n  color: '#333333'\n});\nconst AlbumDate = glamorous.div({\n  marginTop: 5,\n  color: '#8e8e93'\n});\nconst AlbumCopyright = glamorous.div({\n  fontSize: 12,\n  color: '#bbbbbb'\n});\nconst Album = observer(({\n  item\n}) => React.createElement(AlbumItem, {\n  onDoubleClick: item.openEditModal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(AlbumCover, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(AlbumCoverImg, {\n  src: imgUrl + item.imgSrc,\n  onError: e => {\n    item.cover = false;\n    e.target.src = imgUrl + \"cd1.jpg\";\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n})), React.createElement(AlbumInfo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(AlbumArtist, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, item.artist), React.createElement(AlbumTitle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, item.title), React.createElement(AlbumDate, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(DateMonth, {\n  month: item.month,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), \" \", item.year)), React.createElement(ItunesLink, {\n  link: item.itunes_link,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), React.createElement(AlbumCopyright, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, item.copyrightString)));\nexport default Album;\n\nclass ItunesLink extends React.Component {\n  viewInItunes() {\n    window.open(this.props.link, '_blank');\n  }\n\n  render() {\n    if (this.props.link) return React.createElement(AlbumsButton, {\n      buttonType: \"standard\",\n      onClick: this.viewInItunes.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"View in iTunes\");else return null;\n  }\n\n}","map":{"version":3,"sources":["/Users/chi/Projects/Web/albums-2.0/src/components/Albums/Album.js"],"names":["React","DateMonth","AlbumsButton","glamorous","observer","imgUrl","AlbumItem","div","width","overflow","display","flexDirection","alignItems","margin","AlbumCover","AlbumCoverImg","img","height","border","borderRadius","AlbumInfo","marginTop","fontSize","AlbumArtist","color","fontWeight","AlbumTitle","AlbumDate","AlbumCopyright","Album","item","openEditModal","imgSrc","e","cover","target","src","artist","title","month","year","itunes_link","copyrightString","ItunesLink","Component","viewInItunes","window","open","props","link","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport DateMonth from \"../DateMonth\";\nimport AlbumsButton from '../glamorous/AlbumsButton';\nimport glamorous from \"glamorous\";\n\nimport { observer } from \"mobx-react\";\n\nimport { imgUrl } from '../../config';\n\nconst AlbumItem = glamorous.div({\n\twidth: 225,\n\toverflow: 'hidden',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'flex-start',\n\tmargin: '30px 20px 30px 0'\n});\n\nconst AlbumCover = glamorous.div({});\n\nconst AlbumCoverImg = glamorous.img({\n\twidth: 220,\n\theight: 220,\n\tborder: '#e1e7f2 1px solid',\n\tborderRadius: 10\n});\n\nconst AlbumInfo = glamorous.div({\n\tmarginTop: 10,\n\tfontSize: 14\n});\n\nconst AlbumArtist = glamorous.div({\n\tcolor: '#333333',\n\tfontWeight: 'bold'\n});\n\nconst AlbumTitle = glamorous.div({\n\tcolor: '#333333'\n});\n\nconst AlbumDate = glamorous.div({\n\tmarginTop: 5,\n\tcolor: '#8e8e93'\n});\n\nconst AlbumCopyright = glamorous.div({\n\tfontSize: 12,\n\tcolor: '#bbbbbb'\n});\n\nconst Album = observer(({ item }) => (\n\t\t\t<AlbumItem onDoubleClick={item.openEditModal}>\n        <AlbumCover><AlbumCoverImg src={imgUrl+item.imgSrc} onError={(e)=>{item.cover = false; e.target.src=imgUrl+\"cd1.jpg\";}}/></AlbumCover>\n        <AlbumInfo>\n\t\t\t<AlbumArtist>{item.artist}</AlbumArtist>\n\t\t\t<AlbumTitle>{item.title}</AlbumTitle>\n\t\t\t<AlbumDate><DateMonth month={item.month}/> {item.year}</AlbumDate>\n        </AlbumInfo>\n        <ItunesLink link={item.itunes_link}/>\n        <AlbumCopyright>{item.copyrightString}</AlbumCopyright>\n      </AlbumItem>\n));\n\nexport default Album;\n\nclass ItunesLink extends React.Component {\n\tviewInItunes() {\n\t  window.open(this.props.link,'_blank');\n\t}\n\trender() {\n\t\tif (this.props.link) return <AlbumsButton buttonType=\"standard\" onClick={this.viewInItunes.bind(this)}>View in iTunes</AlbumsButton>;\n\t\telse return (null);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}